
//////////////////...functions of T Saturation...//////////////////
//from 0.01 bar to 0.05 bar
double TsatL(double p){
	double T=16.1*log(p)+80.732;
	return T;
}
//from 0.05 bar to 0.1 bar
double TsatL2(double p){
	double T=21.18*log(p)+94.601;
	return T;
}
//from 0.5 bar to 8 bar
double TsatM (double p){
	double T=-0.0041*pow(p,6)+0.1182*pow(p,5)-1.3806*pow(p,4)+8.3997*pow(p,3)-29.223*pow(p,2)+67.089*p+54.426;
	return T;
}
//from 8 bar to 90 bar
double TsatH (double p){
	double T=pow(10,-7)*pow(p,5)-3*pow(10,-5)*pow(p,4)+0.0032*pow(p,3)-0.1866*pow(p,2)+7.0347*p+125.2;
	return T;
}
double Tsat(double P){
	double T=0;
	if (P<=0.05)
	T=TsatL(P);
	if (P>0.05 && P<=0.4)
	T=TsatL2(P);
	if (P>0.4 && P<=8)
	T=TsatM(P);
	if (P>8 && P<=90)
	T=TsatH(P);
	return T;
	}
//////////////////...functions of H Saturation...//////////////////
//from 0.01 bar to 0.05 bar
double HsatVL(double p){
	double H=29.237*log(p)+2647.7;
	return H;
}
//from 0.05 bar to 0.4 bar
double HsatVL1(double p){
	double H=37.018*log(p)+2669.1;
	return H;
}
//from 0.5 bar to 14 bar
double HsatVM (double p){
	double H=-0.0005*pow(p,6)+0.0244*pow(p,5)-0.4709*pow(p,4)+4.6477*pow(p,3)-25.421*pow(p,2)+83.309*p+2611.4;
	return H;
}
//from 14 bar to 110 bar
double HsatVH (double p){
	double H=3*pow(10,-8)*pow(p,5)-pow(10,-5)*pow(p,4)+0.0018*pow(p,3)-0.1427*pow(p,2)+4.947*p+2743.6;
	return H;
}
double HsatV(double P){
	double H=0;
	if (P<=0.05)
	H=HsatVL(P);
	if (P>0.05 && P<=0.4)
	H=HsatVL1(P);
	if (P>0.4 && P<=8)
	H=HsatVM(P);
	if (P>8 && P<90)
	H=HsatVH(P);
	return H;
	
}
//////////////////...functions of P Saturation in Specific H of water...//////////////////
//from 0.01 bar to 0.1 bar
double PsatLHL(double h){
	double P=pow(10,-8)*pow(h,3)-3*pow(10,-7)*h*h+0.0002*h+0.0048;
	return P;
}
//from 0.1 bar to 1 bar
double PsatLHM(double h){
	double P=4*pow(10,-8)*pow(h,3)-2*pow(10,-5)*h*h+0.0042*h-0.3188;
	return P;
}
//from 1 bar to 110 bar
double PsatLHH(double h){
	double P=-5*pow(10,-11)*pow(h,4)+2*pow(10,-7)*pow(h,3)-0.0002*h*h+0.1069*h-18.051;
	return P;
}
double PsatLH(double h){
	double P=0;
	if (h<=200)
	P=PsatLHL(h);
	if (h>200 && h<=420)
	P=PsatLHM(h);
	if (h>420 && h<=1500)
	P=PsatLHH(h);
	return P;
	
}

//////////////////...functions of H Liquid Saturation...//////////////////
//from 0.01 bar to 0.1 bar
double HsatLL(double p){
	double H=268667*pow(p,3)-61204*p*p+5528.7*p-17.116;
	return H;
}
//from 0.1 bar to 1 bar
double HsatLM1 (double p){
	double H=-485.88*pow(p,4)+1350.1*pow(p,3)-1458.2*pow(p,2)+890.32*p+121.18;
	return H;
}
//from 1 bar to 4 bar
double HsatLM2 (double p){
	double H=2.3588*pow(p,3)-27.925*pow(p,2)+151.65*p+294.19;
	return H;
}
//from 4 bar to 10 bar
double HsatLM3 (double p){
	double H=0.1189*pow(p,3)-3.9556*pow(p,2)+63.051*p+408.78;
	return H;
}
//from 10 bar to 110 bar
double HsatLH (double p){
	double H=-8*pow(10,-6)*pow(p,4)+0.0025*pow(p,3)-0.2988*pow(p,2)+20.987*p+586.89;
	return H;
}
double HsatL(double P){
	double H=0;
	if (P<=0.1)
	H=HsatLL(P);
	if (P>0.1 && P<=1)
	H=HsatLM1(P);
	if (P>1 && P<=4)
	H=HsatLM2(P);
	if (P>4 && P<=10)
	H=HsatLM3(P);
	if (P>10 && P<110)
	H=HsatLH(P);
	return H;
	
}
//////////////////...functions of S Liquid Saturation...//////////////////
//from 0.01 bar to 0.05 bar
double SsatLL(double p){
	double S=0.2301*log(p)+1.1627;
	return S;
}
//from 0.05 bar to 0.4 bar
double SsatLL1(double p){
	double S=0.2682*log(p)+1.2671;
	return S;
}
//from 0.5 bar to 4 bar
double SsatLM1 (double p){
	double S=-0.0061*pow(p,4)+0.0698*pow(p,3)-0.3124*pow(p,2)+0.7703*p+0.7791;
	return S;
}
//from 4 bar to 10 bar
double SsatLM2 (double p){
	double S=-0.0035*pow(p,2)+0.1079*p+1.4082;
	return S;
}
//from 10 bar to 110 bar
double SsatLH (double p){
	double S=-2*pow(10,-8)*pow(p,4)+6*pow(10,-6)*pow(p,3)-0.0007*pow(p,2)+0.0458*p+1.7617;
	return S;
}
double SsatL(double P){
	double S=0;
	if (P<=0.05)
	S=SsatLL(P);
	if (P>0.05 && P<=0.4)
	S=SsatLL1(P);
	if (P>0.4 && P<=4)
	S=SsatLM1(P);
	if (P>4 && P<=10)
	S=SsatLM2(P);
	if (P>10 && P<110)
	S=SsatLH(P);
	return S;
	
}
//////////////////...functions of S Vapor Saturation...//////////////////
//from 0.01 bar to 0.4 bar
double SsatVL(double p){
	double S=-0.354*log(p)+7.3385;
	return S;
}
//from 0.5 bar to 10 bar
double SsatVM (double p){
	double S=-0.336*log(p)+7.3599;
	return S;
}

//from 10 bar to 110 bar
double SsatVH (double p){
	double S=-1*pow(10,-6)*pow(p,3)+0.0003*pow(p,2)-0.0277*p+6.8057;
	return S;
}
double SsatV(double P){
	double S=0;
	if (P<=0.4)
	S=SsatVL(P);
	if (P>0.4 && P<=10)
	S=SsatVM(P);
	if (P>10 && P<110)
	S=SsatVH(P);
	return S;
	
}
//////////////////...functions of Cp...//////////////////
	double Cp(double T,double P){
	
    double Tstar=540; // Kelvin
    double Pstar=10; // bar
    double R=0.461526; // kJ/kg.K
    double Ti=T+273.15;
 

    double Tha=Tstar/Ti;
    double Pi=P/Pstar;

	////////...Region2...///////////
	
    ////////...Coefficients of Gammao...///////////
    int Jo[10];
    double no[10];
    
    Jo[0]=0;Jo[1]=0;Jo[2]=1;Jo[3]=-5;Jo[4]=-4;Jo[5]=-3;Jo[6]=-2;Jo[7]=-1;Jo[8]=2;Jo[9]=3;
    
    no[1]=-0.96927686500217*10;
    no[2]=0.10086655968018 *100;
    no[3]=-0.56087911283020/100;
    no[4]=0.71452738081455/10;
    no[5]=-0.40710498223928;
    no[6]=0.14240819171444*10;
    no[7]=-0.43839511319450*10;
    no[8]=-0.28408632460772;
    no[9]=0.21268463753307/10;

    
    ////////...Calculation...///////////
    double Gammaott=0;
    double Cp=0;
    double Gammaint=0;
    for (int i=1;i<10;i++){
    	Gammaint=no[i]*Jo[i]*(Jo[i]-1)*pow(Tha,Jo[i]-2);
    	Gammaott=Gammaott+Gammaint;
	}
 	////////...Coefficients of Gammar...///////////
 	int I[44];
    int J[44];
    double n[44];
    I[0]=0;I[1]=1;I[2]=1;I[3]=1;I[4]=1;I[5]=1;I[6]=2;I[7]=2;I[8]=2;
    I[9]=2;I[10]=2;I[11]=3;I[12]=3;I[13]=3;I[14]=3;
    I[15]=3;I[16]=4;I[17]=4;I[18]=4;I[19]=5;
    I[20]=6;I[21]=6;I[22]=6;
    I[23]=7;I[24]=7;I[25]=7;
    I[26]=8;I[27]=8;I[28]=9;
    I[29]=10;I[30]=10;I[31]=10;
    I[32]=16;I[33]=16;I[34]=18;
    I[35]=20;I[36]=20;I[37]=20;
    I[38]=21;I[39]=22;I[40]=23;
    I[41]=24;I[42]=24;I[43]=24;
    
    J[0]=0;J[1]=0;J[2]=1;J[3]=2;J[4]=3;J[5]=6;J[6]=1;J[7]=2;J[8]=4;
    J[9]=7;J[10]=36;J[11]=0;J[12]=1;J[13]=3;J[14]=6;J[15]=35;J[16]=1;
    J[17]=2;J[18]=3;J[19]=7;J[20]=3;J[21]=16;J[22]=35;J[23]=0;J[24]=11;
    J[25]=25;J[26]=8;J[27]=36;J[28]=13;J[29]=4;J[30]=10;J[31]=14;J[32]=29;J[33]=50;J[34]=57;
    J[35]=20;J[36]=35;J[37]=48;J[38]=21;J[39]=53;J[40]=39;J[41]=26;J[42]=40;J[43]=58;
    
    n[1]=-0.17731742473213/100;
    n[2]=-0.17834862292358/10;
    n[3]=-0.45996013696365/10;
    n[4]=-0.57581259083432/10;
    n[5]=-0.50325278727930/10;
    n[6]=-0.33032641670203*pow(10,-4);
    n[7]=-0.18948987516315/1000;
    n[8]=-0.39392777243355/100;
    n[9]=-0.43797295650573/10;
    n[10]=-0.26674547914087/10000;
    n[11]=0.20481737692309*pow(10,-7);
    n[12]=0.43870667284435*pow(10,-6);
    n[13]=-0.32277677238570*pow(10,-4);
    n[14]=-0.15033924542148/100;
    n[15]=-0.40668253562649/10;
    n[16]=-0.78847309559367*pow(10,-9);
    n[17]=0.12790717852285*pow(10,-7);
    n[18]=0.48225372718507 *pow(10,-6);
    n[19]=0.22922076337661 *pow(10,-5);
    n[20]=-0.16714766451061 *pow(10,-10);
    n[21]=-0.21171472321355 *pow(10,-2);
    n[22]=-0.23895741934104 *pow(10,2);
    n[23]=-0.59059564324270*pow(10,-17);
    n[24]=-0.12621808899101 *pow(10,-5);
    n[25]=-0.38946842435739 *pow(10,1);
    n[26]=0.11256211360459 *pow(10,-10);
    n[27]=-0.82311340897998 *pow(10,1);
    n[28]=0.19809712802088 *pow(10,-7);
    n[29]=0.10406965210174*pow(10,-18);
    n[30]=-0.10234747095929*pow(10,-12);
    n[31]=-0.10018179379511*pow(10,-8);
    n[32]=-0.80882908646985 *pow(10,-10);
    n[33]=0.10693031879409;
    n[34]=-0.33662250574171;
    n[35]=0.89185845355421*pow(10,-24);
    n[36]=0.30629316876232*pow(10,-12);
    n[37]=-0.42002467698208*pow(10,-7);
    n[38]=-0.59056029685639 *pow(10,-25);
    n[39]=0.37826947613457 *pow(10,-5);
    n[40]=-0.12768608934681 *pow(10,-14);
    n[41]=0.73087610595061*pow(10,-28);
    n[42]=0.55414715350778*pow(10,-16);
    n[43]=-0.94369707241210 *pow(10,-6);
	double Gammartt=0;
 	double Gammaint2=0;
    for (int i=1;i<44;i++){
    	Gammaint2=n[i]*pow(Pi,I[i])*J[i]*(J[i]-1)*pow((Tha-0.5),(J[i]-2));
    	Gammartt=Gammartt+Gammaint2;
	}
	Cp=-R*Tha*Tha*(Gammaott+Gammartt);
 	


    return Cp;
}
////////...Entropy of Superheated Steam Function...///////////

double Ssup(double T,double P){
	
    double Tstar=540; // Kelvin
    double Pstar=10; // bar
    double R=0.461526; // kJ/kg.K
    double Ti=T+273.15;
 

    double Tha=Tstar/Ti;
    double Pi=P/Pstar;

	////////...Region2...///////////
	
    ////////...Coefficients of Gammao...///////////
    int Jo[10];
    double no[10];
    
    Jo[0]=0;Jo[1]=0;Jo[2]=1;Jo[3]=-5;Jo[4]=-4;Jo[5]=-3;Jo[6]=-2;Jo[7]=-1;Jo[8]=2;Jo[9]=3;
    
    no[1]=-0.96927686500217*10;
    no[2]=0.10086655968018 *100;
    no[3]=-0.56087911283020/100;
    no[4]=0.71452738081455/10;
    no[5]=-0.40710498223928;
    no[6]=0.14240819171444*10;
    no[7]=-0.43839511319450*10;
    no[8]=-0.28408632460772;
    no[9]=0.21268463753307/10;

    
 	////////...Coefficients of Gammar...///////////
 	int I[44];
    int J[44];
    double n[44];
    I[0]=0;I[1]=1;I[2]=1;I[3]=1;I[4]=1;I[5]=1;I[6]=2;I[7]=2;I[8]=2;
    I[9]=2;I[10]=2;I[11]=3;I[12]=3;I[13]=3;I[14]=3;
    I[15]=3;I[16]=4;I[17]=4;I[18]=4;I[19]=5;
    I[20]=6;I[21]=6;I[22]=6;
    I[23]=7;I[24]=7;I[25]=7;
    I[26]=8;I[27]=8;I[28]=9;
    I[29]=10;I[30]=10;I[31]=10;
    I[32]=16;I[33]=16;I[34]=18;
    I[35]=20;I[36]=20;I[37]=20;
    I[38]=21;I[39]=22;I[40]=23;
    I[41]=24;I[42]=24;I[43]=24;
    
    J[0]=0;J[1]=0;J[2]=1;J[3]=2;J[4]=3;J[5]=6;J[6]=1;J[7]=2;J[8]=4;
    J[9]=7;J[10]=36;J[11]=0;J[12]=1;J[13]=3;J[14]=6;J[15]=35;J[16]=1;
    J[17]=2;J[18]=3;J[19]=7;J[20]=3;J[21]=16;J[22]=35;J[23]=0;J[24]=11;
    J[25]=25;J[26]=8;J[27]=36;J[28]=13;J[29]=4;J[30]=10;J[31]=14;J[32]=29;J[33]=50;J[34]=57;
    J[35]=20;J[36]=35;J[37]=48;J[38]=21;J[39]=53;J[40]=39;J[41]=26;J[42]=40;J[43]=58;
    
    n[1]=-0.17731742473213/100;
    n[2]=-0.17834862292358/10;
    n[3]=-0.45996013696365/10;
    n[4]=-0.57581259083432/10;
    n[5]=-0.50325278727930/10;
    n[6]=-0.33032641670203*pow(10,-4);
    n[7]=-0.18948987516315/1000;
    n[8]=-0.39392777243355/100;
    n[9]=-0.43797295650573/10;
    n[10]=-0.26674547914087/10000;
    n[11]=0.20481737692309*pow(10,-7);
    n[12]=0.43870667284435*pow(10,-6);
    n[13]=-0.32277677238570*pow(10,-4);
    n[14]=-0.15033924542148/100;
    n[15]=-0.40668253562649/10;
    n[16]=-0.78847309559367*pow(10,-9);
    n[17]=0.12790717852285*pow(10,-7);
    n[18]=0.48225372718507 *pow(10,-6);
    n[19]=0.22922076337661 *pow(10,-5);
    n[20]=-0.16714766451061 *pow(10,-10);
    n[21]=-0.21171472321355 *pow(10,-2);
    n[22]=-0.23895741934104 *pow(10,2);
    n[23]=-0.59059564324270*pow(10,-17);
    n[24]=-0.12621808899101 *pow(10,-5);
    n[25]=-0.38946842435739 *pow(10,1);
    n[26]=0.11256211360459 *pow(10,-10);
    n[27]=-0.82311340897998 *pow(10,1);
    n[28]=0.19809712802088 *pow(10,-7);
    n[29]=0.10406965210174*pow(10,-18);
    n[30]=-0.10234747095929*pow(10,-12);
    n[31]=-0.10018179379511*pow(10,-8);
    n[32]=-0.80882908646985 *pow(10,-10);
    n[33]=0.10693031879409;
    n[34]=-0.33662250574171;
    n[35]=0.89185845355421*pow(10,-24);
    n[36]=0.30629316876232*pow(10,-12);
    n[37]=-0.42002467698208*pow(10,-7);
    n[38]=-0.59056029685639 *pow(10,-25);
    n[39]=0.37826947613457 *pow(10,-5);
    n[40]=-0.12768608934681 *pow(10,-14);
    n[41]=0.73087610595061*pow(10,-28);
    n[42]=0.55414715350778*pow(10,-16);
    n[43]=-0.94369707241210 *pow(10,-6);
    
    ////////...Calculation...///////////
    double Gammaot=0;
    double Gammaotint=0;
    for (int i=1;i<10;i++){
    	Gammaotint=no[i]*Jo[i]*pow(Tha,Jo[i]-1);
    	Gammaot=Gammaot+Gammaotint;
	}
	double Gammao=0;
    double Gammaoint=0;
    for (int i=1;i<10;i++){
    	Gammaoint=no[i]*pow(Tha,Jo[i]);
    	Gammao=Gammao+Gammaoint;
	}
    Gammao=log(Pi)+Gammao;
    
	double Gammart=0;
 	double Gammartint=0;
    for (int i=1;i<44;i++){
    	Gammartint=n[i]*pow(Pi,I[i])*J[i]*pow((Tha-0.5),(J[i]-1));
    	Gammart=Gammart+Gammartint;
	}
	double Gammar=0;
 	double Gammarint=0;
    for (int i=1;i<44;i++){
    	Gammarint=n[i]*pow(Pi,I[i])*pow((Tha-0.5),(J[i]));
    	Gammar=Gammar+Gammarint;
	}
 	double Ssuper=R*Tha*(Gammaot+Gammart)-R*(Gammao+Gammar);


    return Ssuper;
}

////////...Enthalpy of Superheated Steam Function...///////////
	double Hsup(double T,double P){
	
    double Tstar=540; // Kelvin
    double Pstar=10; // bar
    double R=0.461526; // kJ/kg.K
    double Ti=T+273.15;
 

    double Tha=Tstar/Ti;
    double Pi=P/Pstar;

	////////...Region2...///////////
	
    ////////...Coefficients of Gammao...///////////
    int Jo[10];
    double no[10];
    
    Jo[0]=0;Jo[1]=0;Jo[2]=1;Jo[3]=-5;Jo[4]=-4;Jo[5]=-3;Jo[6]=-2;Jo[7]=-1;Jo[8]=2;Jo[9]=3;
    
    no[1]=-0.96927686500217*10;
    no[2]=0.10086655968018 *100;
    no[3]=-0.56087911283020/100;
    no[4]=0.71452738081455/10;
    no[5]=-0.40710498223928;
    no[6]=0.14240819171444*10;
    no[7]=-0.43839511319450*10;
    no[8]=-0.28408632460772;
    no[9]=0.21268463753307/10;


 	////////...Coefficients of Gammar...///////////
 	int I[44];
    int J[44];
    double n[44];
    I[0]=0;I[1]=1;I[2]=1;I[3]=1;I[4]=1;I[5]=1;I[6]=2;I[7]=2;I[8]=2;
    I[9]=2;I[10]=2;I[11]=3;I[12]=3;I[13]=3;I[14]=3;
    I[15]=3;I[16]=4;I[17]=4;I[18]=4;I[19]=5;
    I[20]=6;I[21]=6;I[22]=6;
    I[23]=7;I[24]=7;I[25]=7;
    I[26]=8;I[27]=8;I[28]=9;
    I[29]=10;I[30]=10;I[31]=10;
    I[32]=16;I[33]=16;I[34]=18;
    I[35]=20;I[36]=20;I[37]=20;
    I[38]=21;I[39]=22;I[40]=23;
    I[41]=24;I[42]=24;I[43]=24;
    
    J[0]=0;J[1]=0;J[2]=1;J[3]=2;J[4]=3;J[5]=6;J[6]=1;J[7]=2;J[8]=4;
    J[9]=7;J[10]=36;J[11]=0;J[12]=1;J[13]=3;J[14]=6;J[15]=35;J[16]=1;
    J[17]=2;J[18]=3;J[19]=7;J[20]=3;J[21]=16;J[22]=35;J[23]=0;J[24]=11;
    J[25]=25;J[26]=8;J[27]=36;J[28]=13;J[29]=4;J[30]=10;J[31]=14;J[32]=29;J[33]=50;J[34]=57;
    J[35]=20;J[36]=35;J[37]=48;J[38]=21;J[39]=53;J[40]=39;J[41]=26;J[42]=40;J[43]=58;
    
    n[1]=-0.17731742473213/100;
    n[2]=-0.17834862292358/10;
    n[3]=-0.45996013696365/10;
    n[4]=-0.57581259083432/10;
    n[5]=-0.50325278727930/10;
    n[6]=-0.33032641670203*pow(10,-4);
    n[7]=-0.18948987516315/1000;
    n[8]=-0.39392777243355/100;
    n[9]=-0.43797295650573/10;
    n[10]=-0.26674547914087/10000;
    n[11]=0.20481737692309*pow(10,-7);
    n[12]=0.43870667284435*pow(10,-6);
    n[13]=-0.32277677238570*pow(10,-4);
    n[14]=-0.15033924542148/100;
    n[15]=-0.40668253562649/10;
    n[16]=-0.78847309559367*pow(10,-9);
    n[17]=0.12790717852285*pow(10,-7);
    n[18]=0.48225372718507 *pow(10,-6);
    n[19]=0.22922076337661 *pow(10,-5);
    n[20]=-0.16714766451061 *pow(10,-10);
    n[21]=-0.21171472321355 *pow(10,-2);
    n[22]=-0.23895741934104 *pow(10,2);
    n[23]=-0.59059564324270*pow(10,-17);
    n[24]=-0.12621808899101 *pow(10,-5);
    n[25]=-0.38946842435739 *pow(10,1);
    n[26]=0.11256211360459 *pow(10,-10);
    n[27]=-0.82311340897998 *pow(10,1);
    n[28]=0.19809712802088 *pow(10,-7);
    n[29]=0.10406965210174*pow(10,-18);
    n[30]=-0.10234747095929*pow(10,-12);
    n[31]=-0.10018179379511*pow(10,-8);
    n[32]=-0.80882908646985 *pow(10,-10);
    n[33]=0.10693031879409;
    n[34]=-0.33662250574171;
    n[35]=0.89185845355421*pow(10,-24);
    n[36]=0.30629316876232*pow(10,-12);
    n[37]=-0.42002467698208*pow(10,-7);
    n[38]=-0.59056029685639 *pow(10,-25);
    n[39]=0.37826947613457 *pow(10,-5);
    n[40]=-0.12768608934681 *pow(10,-14);
    n[41]=0.73087610595061*pow(10,-28);
    n[42]=0.55414715350778*pow(10,-16);
    n[43]=-0.94369707241210 *pow(10,-6);

 	double Gammaot=0;
 	double Gammart=0;
 	double Gammaint3=0;
 	for (int i=1;i<10;i++){
    	Gammaint3=no[i]*Jo[i]*pow(Tha,(Jo[i]-1));
    	Gammaot=Gammaot+Gammaint3;
	}
	double Gammaint4=0;
	for (int i=1;i<44;i++){
    	Gammaint4=n[i]*pow(Pi,I[i])*J[i]*pow((Tha-0.5),(J[i]-1));
    	Gammart=Gammart+Gammaint4;
	}
	 double Hsuper=R*Ti*Tha*(Gammart+Gammaot);


    return Hsuper;
}